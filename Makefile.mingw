### Windows (MinGW) Makefile for the scid chess database package.
### Copyright (C) 2002-2003, Shane Hudson (sgh@users.sourceforge.net)

# This make file is designed for use with make from the MinGW package.
# MinGW is a minimal GNU for Windows package.
# If the MinGW bin folder is in your path, run this makefile
# with the command:     make -f Makefile.mingw
# or you may need:      mingw32-make -f Makefile.mingw

###
# Project directories: you will need to edit these according to your
# Visual C++ or Visual Studio installation, and Tcl/Tk installation.

MINGW_BIN = C:\MinGW\bin
TCL_DIR = C:\Tcl

# Tcl/Tk version: it should be "83" for Tcl/Tk 8.3, etc.
TCL_VERSION = 86


### Compiler and linker:
COMPILE = "$(MINGW_BIN)\g++.exe"
CC = "$(MINGW_BIN)\gcc.exe"
LINK = "$(MINGW_BIN)\g++.exe"
RC = "$(MINGW_BIN)\windres.exe"

OUT_DIR = .\Release

TCL_INCLUDE = -I"$(TCL_DIR)\include"
TCL_LIB = "$(TCL_DIR)\lib\tcl$(TCL_VERSION).lib"
TK_LIB = "$(TCL_DIR)\lib\tk$(TCL_VERSION).lib" "$(TCL_DIR)\lib\tcl$(TCL_VERSION).lib"


########################################
### Compiler options:


### TB: Tablebase support.
###    Use:   TB = /DSCID_USE_TB     for tablebase capability.
###    Use:   TB =                   for no tablebase reading capability.
TB = -DSCID_USE_TB -DT41_INCLUDE

### OPT: C/C++ Optimization
OPT = -O3

### CPPOPT: Optimization for C++ only (not C)
CPPOPT = -fno-rtti -fno-exceptions

### WARNINGS: Compiler warnings
WARNINGS = -Wall

### PROFILE: Use "-pg" for profiling in g++
#PROFILE = -fprofile-arcs -ftest-coverage
PROFILE=

# LFLAGS: Linker flags
LFLAGS = $(PROFILE)

### CPPFLAGS: C++ compiler flags
CPPFLAGS = -DWIN32 $(OPT) $(CPPOPT) $(PROFILE) $(WARNINGS)

### CPPFLAGSNOWARN: C++ compiler flags without warnings
CPPFLAGSNOWARN = -DWIN32 $(OPT) $(CPPOPT) $(PROFILE)

### SCIDOBJS: not all the .o files that make up scid, just the standard
###   files that most of the scid programs use.
###
SCIDOBJS= src\misc.obj src\index.obj src\date.obj src\namebase.obj \
      src\position.obj src\game.obj src\gfile.obj src\matsig.obj \
      src\bytebuf.obj src\textbuf.obj src\myassert.obj src\stralloc.obj \
      src\mfile.obj src\dstring.obj src\pgnparse.obj src\stored.obj \
      src\movelist.obj src\sortcache.obj src\filter.obj src\scidbase.obj \
      src\tree.obj src\pbook.obj src\crosstab.obj src\spellchk.obj src\probe.obj \
      src\optable.obj src\engine.obj src\recog.obj \
      src\polyglot\attack.o src\polyglot\board.o src\polyglot\book.o \
			src\polyglot\book_make.o src\polyglot\book_merge.o src\polyglot\colour.o \
      src\polyglot\fen.o src\polyglot\game.o src\polyglot\hash.o \
      src\polyglot\io.o src\polyglot\line.o src\polyglot\list.o src\polyglot\main.o src\polyglot\move.o \
      src\polyglot\move_do.o src\polyglot\move_gen.o src\polyglot\move_legal.o src\polyglot\option.o \
      src\polyglot\parse.o src\polyglot\pgn.o src\polyglot\piece.o src\polyglot\random.o \
      src\polyglot\san.o src\polyglot\search.o src\polyglot\square.o src\polyglot\util.o

### OBJS: all standard object files for scid.
###
OBJS= $(SCIDOBJS)

### TCLS: all the .tcl files that make up "scid".
TCLS= tcl\start.tcl

########################################

### Type "make" or "make all" to make all executables:
all: setup scid.gui scid.exe

setup:
	@if not exist $(OUT_DIR)\nul mkdir $(OUT_DIR)
	-copy "$(MINGW_BIN)\libstdc++-6.dll" $(OUT_DIR)
	-copy "$(MINGW_BIN)\libgcc_s_dw2-1.dll" $(OUT_DIR)

scid.gui: $(TCLS)
	-del $(OUT_DIR)\scid.gui
	type $(TCLS) > $(OUT_DIR)\scid.gui

scid.exe: src\scid.obj $(OBJS) scid.coff
	$(LINK) $(LFLAGS) -o $(OUT_DIR)\scid.exe src\scid.obj $(OBJS) scid.coff \
            $(TK_LIB) -mwindows

scid.coff: scid.rc
	$(RC) -O coff scid.rc scid.coff

### To remove object and executable files: type "make clean"
clean:
	-del /F src\*.obj scid.coff
	-rmdir /S /Q $(OUT_DIR)

src\scid.obj: src\tkscid.cpp
	$(COMPILE) $(CPPFLAGS) $(TCL_INCLUDE) -c src\tkscid.cpp -o .\src\scid.obj

src\probe.obj: src\probe.cpp src\egtb\tbindex.cpp src\egtb\tbdecode.c
	$(COMPILE) $(CPPFLAGSNOWARN) $(TCL_INCLUDE) $(TB) -c src\probe.cpp -o .\src\probe.obj

%.obj: %.cpp
	$(COMPILE) $(CPPFLAGS) $(TCL_INCLUDE) -c $< -o .\$@
